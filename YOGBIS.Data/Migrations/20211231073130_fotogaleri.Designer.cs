// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YOGBIS.Data.DataContext;

namespace YOGBIS.Data.Migrations
{
    [DbContext(typeof(YOGBISContext))]
    [Migration("20211231073130_fotogaleri")]
    partial class fotogaleri
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.EntityFrameworkCore.AutoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Changed")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("AutoHistory");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Adaylar", b =>
                {
                    b.Property<int>("AdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdayAd")
                        .HasColumnType("text");

                    b.Property<string>("AdayAd2")
                        .HasColumnType("text");

                    b.Property<string>("AdayAnaAd")
                        .HasColumnType("text");

                    b.Property<string>("AdayBabaAd")
                        .HasColumnType("text");

                    b.Property<string>("AdaySoyad")
                        .HasColumnType("text");

                    b.Property<string>("AdaySoyad2")
                        .HasColumnType("text");

                    b.Property<int>("AdayTC")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("MulakatId")
                        .HasColumnType("int");

                    b.HasKey("AdayId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("MulakatId");

                    b.ToTable("Adaylars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Aktiviteler", b =>
                {
                    b.Property<int>("AktiviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AktiviteAdi")
                        .HasColumnType("text");

                    b.Property<string>("AktiviteBilgi")
                        .HasColumnType("text");

                    b.Property<DateTime>("BasTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("DuzenleyenAdiSoyadi")
                        .HasColumnType("text");

                    b.Property<int>("KatilimciSayisi")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("OkulId")
                        .HasColumnType("int");

                    b.Property<string>("Resim1Yol")
                        .HasColumnType("text");

                    b.Property<string>("Resim2Yol")
                        .HasColumnType("text");

                    b.Property<string>("Resim3Yol")
                        .HasColumnType("text");

                    b.HasKey("AktiviteId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("OkulId");

                    b.ToTable("Aktivitelers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Dereceler", b =>
                {
                    b.Property<int>("DereceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DereceAdi")
                        .HasColumnType("text");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("DereceId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("Derecelers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Eyaletler", b =>
                {
                    b.Property<int>("EyaletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EyaletAciklama")
                        .HasColumnType("text");

                    b.Property<string>("EyaletAdi")
                        .HasColumnType("text");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("UlkeId")
                        .HasColumnType("int");

                    b.HasKey("EyaletId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("UlkeId");

                    b.ToTable("Eyaletlers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.FotoGaleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AktiviteId")
                        .HasColumnType("int");

                    b.Property<int?>("AktivitelerAktiviteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AktivitelerAktiviteId");

                    b.ToTable("FotoGaleri");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.GorevKaydi", b =>
                {
                    b.Property<int>("GorevId")
                        .HasColumnType("int");

                    b.Property<int>("GorevliTC")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GorevBasTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("GorevBitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("GorevOnaySayi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GorevTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("GorevYeri")
                        .HasColumnType("text");

                    b.Property<string>("GörevAdi")
                        .HasColumnType("text");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("OgretmenlerOgretmenId")
                        .HasColumnType("int");

                    b.Property<int?>("OkutmanlarOkutmanId")
                        .HasColumnType("int");

                    b.HasKey("GorevId", "GorevliTC");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("OgretmenlerOgretmenId");

                    b.HasIndex("OkutmanlarOkutmanId");

                    b.ToTable("GorevKaydis");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Kitalar", b =>
                {
                    b.Property<int>("KitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KitaAciklama")
                        .HasColumnType("text");

                    b.Property<string>("KitaAdi")
                        .HasColumnType("text");

                    b.HasKey("KitaId");

                    b.ToTable("Kitalars");

                    b.HasData(
                        new
                        {
                            KitaId = 1,
                            KitaAciklama = "Afrika Kıtası",
                            KitaAdi = "Afrika"
                        },
                        new
                        {
                            KitaId = 2,
                            KitaAciklama = "Antartika Kıtası",
                            KitaAdi = "Antartika"
                        },
                        new
                        {
                            KitaId = 3,
                            KitaAciklama = "Asya Kıtası",
                            KitaAdi = "Asya"
                        },
                        new
                        {
                            KitaId = 4,
                            KitaAciklama = "Avrupa Kıtası",
                            KitaAdi = "Avrupa"
                        },
                        new
                        {
                            KitaId = 5,
                            KitaAciklama = "Avustralya Kıtası",
                            KitaAdi = "Avustralya"
                        },
                        new
                        {
                            KitaId = 6,
                            KitaAciklama = "Güney Amerika Kıtası",
                            KitaAdi = "Güney Amerika"
                        },
                        new
                        {
                            KitaId = 7,
                            KitaAciklama = "Kuzey Amerika Kıtası",
                            KitaAdi = "Kuzey Amerika"
                        });
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.MulakatSorulari", b =>
                {
                    b.Property<int>("MulakatSorulariId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cevap")
                        .HasColumnType("text");

                    b.Property<string>("DereceAdi")
                        .HasColumnType("text");

                    b.Property<int>("DereceId")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("MulakatId")
                        .HasColumnType("int");

                    b.Property<string>("Soru")
                        .HasColumnType("text");

                    b.Property<int>("SoruId")
                        .HasColumnType("int");

                    b.Property<string>("SoruKategoriAdi")
                        .HasColumnType("text");

                    b.Property<int>("SoruKategoriId")
                        .HasColumnType("int");

                    b.Property<int>("SoruSiraNo")
                        .HasColumnType("int");

                    b.HasKey("MulakatSorulariId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("MulakatId");

                    b.ToTable("MulakatSorularis");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Mulakatlar", b =>
                {
                    b.Property<int>("MulakatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdaySayisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslamaTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("DereceId")
                        .HasColumnType("int");

                    b.Property<bool?>("Durumu")
                        .HasColumnType("bit");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("MulakatAciklama")
                        .HasColumnType("text");

                    b.Property<string>("MulakatAdi")
                        .HasColumnType("text");

                    b.Property<string>("OnaySayisi")
                        .HasColumnType("text");

                    b.Property<int>("SorulanSoruSayisi")
                        .HasColumnType("int");

                    b.HasKey("MulakatId");

                    b.HasIndex("DereceId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("Mulakatlars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Notlar", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BaTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BiTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("NotAdi")
                        .HasColumnType("text");

                    b.Property<string>("NotDetay")
                        .HasColumnType("text");

                    b.Property<string>("NotRenk")
                        .HasColumnType("text");

                    b.HasKey("NotId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("Notlars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ogrenciler", b =>
                {
                    b.Property<int>("OgrencilerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OkulKayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.Property<string>("Uyruk")
                        .HasColumnType("text");

                    b.HasKey("OgrencilerId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("SinifId");

                    b.ToTable("Ogrencilers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ogretmenler", b =>
                {
                    b.Property<int>("OgretmenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OgretmenAd")
                        .HasColumnType("text");

                    b.Property<string>("OgretmenAd2")
                        .HasColumnType("text");

                    b.Property<string>("OgretmenSoyad")
                        .HasColumnType("text");

                    b.Property<string>("OgretmenSoyad2")
                        .HasColumnType("text");

                    b.Property<int>("OgretmenTC")
                        .HasColumnType("int");

                    b.Property<int?>("OkulId")
                        .HasColumnType("int");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("OgretmenId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("OkulId");

                    b.HasIndex("SehirId");

                    b.ToTable("Ogretmenlers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.OkulBilgi", b =>
                {
                    b.Property<int>("OkulBilgiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("KullaniciId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("MdYrdAdiSoyadi")
                        .HasColumnType("text");

                    b.Property<string>("MdYrdDonusYil")
                        .HasColumnType("text");

                    b.Property<string>("MdYrdEPosta")
                        .HasColumnType("text");

                    b.Property<string>("MdYrdTelefon")
                        .HasColumnType("text");

                    b.Property<string>("MudurAdiSoyadi")
                        .HasColumnType("text");

                    b.Property<string>("MudurDonusYil")
                        .HasColumnType("text");

                    b.Property<string>("MudurEPosta")
                        .HasColumnType("text");

                    b.Property<string>("MudurTelefon")
                        .HasColumnType("text");

                    b.Property<string>("OkulAdres")
                        .HasColumnType("text");

                    b.Property<int>("OkulId")
                        .HasColumnType("int");

                    b.Property<string>("OkulTelefon")
                        .HasColumnType("text");

                    b.Property<int>("UlkeId")
                        .HasColumnType("int");

                    b.HasKey("OkulBilgiId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OkulId");

                    b.HasIndex("UlkeId");

                    b.ToTable("OkulBilgis");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Okullar", b =>
                {
                    b.Property<int>("OkulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OkulAcilisTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OkulAdi")
                        .HasColumnType("text");

                    b.Property<string>("OkulBilgi")
                        .HasColumnType("text");

                    b.Property<bool?>("OkulDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("OkulFoto")
                        .HasColumnType("text");

                    b.Property<int>("OkulKodu")
                        .HasColumnType("int");

                    b.Property<bool?>("OkulKutuphane")
                        .HasColumnType("bit");

                    b.Property<bool?>("OkulLab")
                        .HasColumnType("bit");

                    b.Property<string>("OkulLogo")
                        .HasColumnType("text");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("OkulId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("SehirId");

                    b.ToTable("Okullars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Okutmanlar", b =>
                {
                    b.Property<int>("OkutmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OkutmanAd")
                        .HasColumnType("text");

                    b.Property<string>("OkutmanAd2")
                        .HasColumnType("text");

                    b.Property<string>("OkutmanSoyad")
                        .HasColumnType("text");

                    b.Property<string>("OkutmanSoyad2")
                        .HasColumnType("text");

                    b.Property<int>("OkutmanTC")
                        .HasColumnType("int");

                    b.Property<int>("UniId")
                        .HasColumnType("int");

                    b.HasKey("OkutmanId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("UniId");

                    b.ToTable("Okutmanlars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Sehirler", b =>
                {
                    b.Property<int>("SehirId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("Baskent")
                        .HasColumnType("bit");

                    b.Property<int>("EyaletId")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("SehirAciklama")
                        .HasColumnType("text");

                    b.Property<string>("SehirAdi")
                        .HasColumnType("text");

                    b.HasKey("SehirId");

                    b.HasIndex("EyaletId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("Sehirlers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Siniflar", b =>
                {
                    b.Property<int>("SinifId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SinifAcilisTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("SinifAdi")
                        .HasColumnType("text");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.HasKey("SinifId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("SubeId");

                    b.ToTable("Siniflars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruBankasi", b =>
                {
                    b.Property<int>("SoruBankasiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cevap")
                        .HasColumnType("text");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OnayAciklama")
                        .HasColumnType("text");

                    b.Property<int?>("OnayDurumu")
                        .HasColumnType("int");

                    b.Property<string>("OnaylayanId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Soru")
                        .HasColumnType("text");

                    b.Property<bool>("SoruDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SorulmaSayisi")
                        .HasColumnType("int");

                    b.HasKey("SoruBankasiId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("OnaylayanId");

                    b.ToTable("SoruBankasis");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruDerece", b =>
                {
                    b.Property<int>("SoruId")
                        .HasColumnType("int");

                    b.Property<int>("DereceId")
                        .HasColumnType("int");

                    b.HasKey("SoruId", "DereceId");

                    b.ToTable("SoruDereces");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruKategori", b =>
                {
                    b.Property<int>("SoruId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("SoruId", "KategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("SoruKategoris");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruKategoriler", b =>
                {
                    b.Property<int>("SoruKategorilerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DereceId")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("SoruKategorilerAdi")
                        .HasColumnType("text");

                    b.Property<string>("SoruKategorilerKullanimi")
                        .HasColumnType("text");

                    b.Property<int>("SoruKategorilerPuan")
                        .HasColumnType("int");

                    b.HasKey("SoruKategorilerId");

                    b.HasIndex("DereceId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("SoruKategorilers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Subeler", b =>
                {
                    b.Property<int>("SubeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OkulAdi")
                        .HasColumnType("text");

                    b.Property<int>("OkulId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubeAcilisTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("SubeId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("OkulId");

                    b.ToTable("Subelers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.UlkeGruplari", b =>
                {
                    b.Property<int>("UlkeGrupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("UlkeGrupAciklama")
                        .HasColumnType("text");

                    b.Property<string>("UlkeGrupAdi")
                        .HasColumnType("text");

                    b.HasKey("UlkeGrupId");

                    b.HasIndex("KaydedenId");

                    b.ToTable("UlkeGruplaris");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.UlkeGruplariKitalar", b =>
                {
                    b.Property<int>("KitaId")
                        .HasColumnType("int");

                    b.Property<int>("UlkeGrupId")
                        .HasColumnType("int");

                    b.HasKey("KitaId", "UlkeGrupId");

                    b.HasIndex("UlkeGrupId");

                    b.ToTable("UlkeGruplariKitalars");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ulkeler", b =>
                {
                    b.Property<int>("UlkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("KitaId")
                        .HasColumnType("int");

                    b.Property<string>("UlkeAciklama")
                        .HasColumnType("text");

                    b.Property<string>("UlkeAdi")
                        .HasColumnType("text");

                    b.Property<string>("UlkeBayrak")
                        .HasColumnType("text");

                    b.Property<int>("UlkeGrupId")
                        .HasColumnType("int");

                    b.HasKey("UlkeId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("KitaId");

                    b.HasIndex("UlkeGrupId");

                    b.ToTable("Ulkelers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Universiteler", b =>
                {
                    b.Property<int>("UniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KaydedenId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<string>("UniAdi")
                        .HasColumnType("text");

                    b.Property<string>("UniBilgi")
                        .HasColumnType("text");

                    b.Property<string>("UniLogo")
                        .HasColumnType("text");

                    b.HasKey("UniId");

                    b.HasIndex("KaydedenId");

                    b.HasIndex("SehirId");

                    b.ToTable("Universitelers");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Kullanici", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("KulaniciAdDegLimiti")
                        .HasColumnType("int");

                    b.Property<byte[]>("KullaniciResim")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("KullaniciResimYol")
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<int>("TcKimlikNo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Kullanici");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Adaylar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Adaylars")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Mulakatlar", "Mulakatlar")
                        .WithMany("Adaylars")
                        .HasForeignKey("MulakatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Aktiviteler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Aktivitelers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Okullar", "Okullar")
                        .WithMany("Aktivitelers")
                        .HasForeignKey("OkulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Dereceler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Derecelers")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Eyaletler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Eyaletlers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Ulkeler", "Ulkeler")
                        .WithMany("Eyaletlers")
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.FotoGaleri", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Aktiviteler", "Aktiviteler")
                        .WithMany("FotoGaleri")
                        .HasForeignKey("AktivitelerAktiviteId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.GorevKaydi", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("GorevKaydis")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Ogretmenler", null)
                        .WithMany("GorevKaydis")
                        .HasForeignKey("OgretmenlerOgretmenId");

                    b.HasOne("YOGBIS.Data.DbModels.Okutmanlar", null)
                        .WithMany("GorevKaydis")
                        .HasForeignKey("OkutmanlarOkutmanId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.MulakatSorulari", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Mulakatlar", "Mulakatlar")
                        .WithMany("MulakatSorularis")
                        .HasForeignKey("MulakatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Mulakatlar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Dereceler", "Dereceler")
                        .WithMany()
                        .HasForeignKey("DereceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Mulakatlars")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Notlar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Notlars")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ogrenciler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Ogrencilers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Siniflar", "Siniflar")
                        .WithMany("Ogrencilers")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ogretmenler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Ogretmenlers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Okullar", "Okullar")
                        .WithMany("Ogretmenlers")
                        .HasForeignKey("OkulId");

                    b.HasOne("YOGBIS.Data.DbModels.Sehirler", "Sehirler")
                        .WithMany("Ogretmenlers")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.OkulBilgi", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId");

                    b.HasOne("YOGBIS.Data.DbModels.Okullar", "Okullar")
                        .WithMany()
                        .HasForeignKey("OkulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.Ulkeler", "Ulkeler")
                        .WithMany()
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Okullar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Okullars")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Sehirler", "Sehirler")
                        .WithMany("Okullars")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Okutmanlar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Okutmanlars")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Universiteler", "Universiteler")
                        .WithMany("Okutmanlars")
                        .HasForeignKey("UniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Sehirler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Eyaletler", "Eyaletler")
                        .WithMany("Sehirlers")
                        .HasForeignKey("EyaletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Sehirlers")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Siniflar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Siniflars")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Subeler", "Subeler")
                        .WithMany("Siniflars")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruBankasi", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kaydeden")
                        .WithMany()
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruDerece", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Dereceler", "Dereceler")
                        .WithMany("SoruDereces")
                        .HasForeignKey("SoruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.SoruBankasi", "SoruBankasi")
                        .WithMany("SoruDereces")
                        .HasForeignKey("SoruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruKategori", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.SoruKategoriler", "SoruKategoriler")
                        .WithMany("SoruKategoris")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.SoruBankasi", "SoruBankasi")
                        .WithMany("SoruKategoris")
                        .HasForeignKey("SoruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.SoruKategoriler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Dereceler", "Dereceler")
                        .WithMany("SoruKategorilers")
                        .HasForeignKey("DereceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("SoruKategorilers")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Subeler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Subelers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Okullar", "Okullar")
                        .WithMany("Subelers")
                        .HasForeignKey("OkulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.UlkeGruplari", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("UlkeGruplaris")
                        .HasForeignKey("KaydedenId");
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.UlkeGruplariKitalar", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kitalar", "Kitalar")
                        .WithMany("UlkeGruplariKitalars")
                        .HasForeignKey("KitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.UlkeGruplari", "UlkeGruplari")
                        .WithMany("UlkeGruplariKitalars")
                        .HasForeignKey("UlkeGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Ulkeler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Ulkelers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Kitalar", "Kitalar")
                        .WithMany("Ulkelers")
                        .HasForeignKey("KitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOGBIS.Data.DbModels.UlkeGruplari", "UlkeGruplari")
                        .WithMany("Ulkelers")
                        .HasForeignKey("UlkeGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YOGBIS.Data.DbModels.Universiteler", b =>
                {
                    b.HasOne("YOGBIS.Data.DbModels.Kullanici", "Kullanici")
                        .WithMany("Universitelers")
                        .HasForeignKey("KaydedenId");

                    b.HasOne("YOGBIS.Data.DbModels.Sehirler", "Sehirler")
                        .WithMany("Universitelers")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
